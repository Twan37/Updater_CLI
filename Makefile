#Define compiler, flags and name for the executable.
CC			= g++
LD			= g++
PROG		= main
CFLAGS 		= -c -Wall -Wextra -Wconversion -Wpedantic -MD
LDFLAGS		= -Wall -Wextra -Wconversion -Wpedantic -lswupdate -lpthread -lubootenv

#Get a string of all the source files
SRC_DIR := src/
SOURCE_FILES := $(wildcard $(SRC_DIR)*.cpp)

#Get a string of all the object files
OBJ_DIR := obj/
OBJS := $(patsubst $(SRC_DIR)%.cpp,$(OBJ_DIR)%.o,$(SOURCE_FILES))

#Compile all the necessary object files and generate the dependency files (-MD flag)
$(OBJ_DIR)%.o: $(SRC_DIR)%.cpp
	$(CC) $< -o $@ $(CFLAGS)

#Link all the object files
$(PROG): $(OBJS)
	$(LD) -o $@ $(OBJS) $(LDFLAGS)

#use "make clean" to remove the executable, the object files and the dependency files.
.PHONY: clean
clean:
	rm -f $(PROG) obj/*

#include dependency files generated by the compiler
-include $(OBJS:.o=.d)